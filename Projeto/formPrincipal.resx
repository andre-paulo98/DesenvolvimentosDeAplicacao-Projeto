<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btUtilizadores.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btCartas.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>